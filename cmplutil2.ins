% cmplutil2.ins --- DOCSTRIP installation script for 
% network completion utility 2
\input docstrip

% Redefine the \MetaPrefix; it should be something which starts a
% until-end-of-line comment:
\edef\MetaPrefix{\string#\string#}


% Redefine the file preamble and postamble; this is necessary because 
% otherwise the old \metaPrefix is inserted at the beginning of these 
% lines.
\preamble

In other words:
**************************************
* This Source is not the True Source *
**************************************
the true source is the file from which this one was generated.

\endpreamble

\postamble
\endpostamble

\askforoverwritefalse

% Actually make the .tcl file. 
\generate{
% This is a combined file which contains several supporting packages.
   \file{cmplutil.tcl}{
      \from{network2.dtx}{pkg}
      \from{api.dtx}{pkg}
      \from{export.dtx}{openmath,xmlgen,pkg}
      \from{rings.dtx}{integers,float,SemigroupAlgebra}
      \from{props.dtx}{pkg}
      \from{heap.dtx}{pkg,skiplist}
      \from{cmplutil2.dtx}{vsquare,Tk,stats,splitnewrule,lazier,eventbug}
   }
% The following all contains the settings and congruences for 
% specific problems.
   \file{cmplfrob.tcl}{
      \from{network2.dtx}{pkg}
      \from{api.dtx}{pkg}
      \from{export.dtx}{openmath,xmlgen,pkg}
      \from{rings.dtx}{integers,float,SemigroupAlgebra}
      \from{heap.dtx}{pkg,skiplist}
      \from{cmplutil2.dtx}
        {vsquare,Tk,Frobenius,coproduct,stats,splitnewrule,lazier,%
         eventbug,testserver}
   }
   \file{cmplfrobnoweb.tcl}{
      \from{network2.dtx}{pkg}
      \from{api.dtx}{pkg}
      \from{export.dtx}{openmath,xmlgen,pkg}
      \from{rings.dtx}{integers,float,SemigroupAlgebra}
      \from{heap.dtx}{pkg,skiplist}
      \from{cmplutil2.dtx}
        {vsquare,Tk,Frobenius,coproduct,stats,splitnewrule,lazier,eventbug}
   }
   \file{cmplhopf-nozlib.tcl}{
      \from{network2.dtx}{pkg}
      \from{export.dtx}{openmath,xmlgen,pkg}
      \from{rings.dtx}{integers,float,SemigroupAlgebra}
      \from{props.dtx}{pkg}
      \from{heap.dtx}{pkg,skiplist}
      \from{cmplutil2.dtx}
        {vsquare,Tk,Hopf,stats,splitnewrule,lazier,pairmap,eventbug}
   }
   \file{cmplhopf.tcl}{
      \from{network2.dtx}{pkg}
      \from{api.dtx}{pkg}
      \from{export.dtx}{openmath,xmlgen,pkg}
      \from{rings.dtx}{integers,float,SemigroupAlgebra}
      \from{props.dtx}{pkg}
      \from{heap.dtx}{pkg,skiplist}
      \from{cmplutil2.dtx}
        {vsquare,noTk,Hopf,twist,untwist,stats,splitnewrule,lazier,pairmap,%
          eventbug,testserver,zlib}
   }
   \file{cmplhopftk.tcl}{
      \from{network2.dtx}{pkg}
      \from{api.dtx}{pkg}
      \from{export.dtx}{openmath,xmlgen,pkg}
      \from{rings.dtx}{integers,float,SemigroupAlgebra}
      \from{props.dtx}{pkg}
      \from{heap.dtx}{pkg,skiplist}
      \from{cmplutil2.dtx}
        {vsquare,Tk,Hopf,twist,untwist,stats,splitnewrule,lazier,pairmap,%
          eventbug,testserver,zlib}
   }
%    \file{cmplweak.tcl}{
%       \from{network2.dtx}{pkg}
%       \from{export.dtx}{openmath,xmlgen,pkg}
%       \from{rings.dtx}{integers,float,SemigroupAlgebra}
%       \from{heap.dtx}{pkg,skiplist}
%       \from{cmplutil2.dtx}
%         {vsquare,Tk,WeakAss,stats,splitnewrule,lazier,eventbug}
%    }
%    \file{cmplhopftrig.tcl}{
%       \from{network2.dtx}{pkg}
%       \from{export.dtx}{openmath,xmlgen,pkg}
%       \from{rings.dtx}{integers,float,SemigroupAlgebra}
%       \from{props.dtx}{pkg}
%       \from{heap.dtx}{pkg,skiplist}
%       \from{cmplutil2.dtx}
%         {vsquare,Tk,Hopf,cocomplex,stats,splitnewrule,lazier,pairmap,zlib}
%    }
   \file{cmplbraid.tcl}{
      \from{network2.dtx}{pkg}
      \from{api.dtx}{pkg}
      \from{export.dtx}{openmath,xmlgen,pkg}
      \from{groups.dtx}{pkg}
      \from{rings.dtx}{integers,float,SemigroupAlgebra}
      \from{props.dtx}{pkg}
      \from{heap.dtx}{pkg,skiplist}
      \from{cmplutil2.dtx}
        {vsquare,Tk,BraidMatrix,stats,splitnewrule,lazier,%
         eventbug,testserver}
   }
   \file{cmplhomass.tcl}{
      \from{network2.dtx}{pkg}
      \from{export.dtx}{openmath,xmlgen,pkg}
      \from{rings.dtx}{integers,float,SemigroupAlgebra}
      \from{props.dtx}{pkg}
      \from{heap.dtx}{pkg,skiplist}
      \from{cmplutil2.dtx}
        {vsquare,Tk,HomAss,aishom,stats,splitnewrule,%lazier,pairmap,
          eventbug,testserver,zlib}
   }
   \file{cmplhomleibtk.tcl}{
      \from{network2.dtx}{pkg}
      \from{api.dtx}{pkg}
      \from{export.dtx}{openmath,xmlgen,pkg}
      \from{rings.dtx}{integers,float,SemigroupAlgebra}
      \from{props.dtx}{pkg}
      \from{heap.dtx}{pkg,skiplist}
      \from{cmplutil2.dtx}
        {vsquare,Tk,HomLeib,twist,untwist,stats,splitnewrule,lazier,pairmap,%
          eventbug,testserver,zlib}
   }
%    \file{cmpltransp.tcl}{
%       \from{network2.dtx}{pkg}
%       \from{export.dtx}{openmath,xmlgen,pkg}
%       \from{rings.dtx}{integers,float,SemigroupAlgebra}
%       \from{props.dtx}{pkg}
%       \from{heap.dtx}{pkg,skiplist}
%       \from{cmplutil2.dtx}
%         {vsquare,Tk,Transposition,stats,splitnewrule}
%    }
}


\endbatchfile
